package Logic;
// Generated 07.12.2017 16:40:51 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name="question"
    ,catalog="sqltraining"
)
public class Question  implements java.io.Serializable {


     private Integer idQuestions;
     private Lecture lecture;
     private String questions;
     private String type;
     private Set<Answer> answers = new HashSet<Answer>(0);

    public Question() {
    }

	
    public Question(Lecture lecture, String questions, String type) {
        this.lecture = lecture;
        this.questions = questions;
        this.type = type;
    }
    public Question(Lecture lecture, String questions, String type, Set<Answer> answers) {
       this.lecture = lecture;
       this.questions = questions;
       this.type = type;
       this.answers = answers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID_questions", unique=true, nullable=false)
    public Integer getIdQuestions() {
        return this.idQuestions;
    }
    
    public void setIdQuestions(Integer idQuestions) {
        this.idQuestions = idQuestions;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_lecture", nullable=false)
    public Lecture getLecture() {
        return this.lecture;
    }
    
    public void setLecture(Lecture lecture) {
        this.lecture = lecture;
    }

    
    @Column(name="questions", nullable=false, length=65535)
    public String getQuestions() {
        return this.questions;
    }
    
    public void setQuestions(String questions) {
        this.questions = questions;
    }

    
    @Column(name="type", nullable=false, length=65535)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="question")
    public Set<Answer> getAnswers() {
        return this.answers;
    }
    
    public void setAnswers(Set<Answer> answers) {
        this.answers = answers;
    }




}


